（一）将“顺序表.cpp”中的 main函数填充完整，实现
1、创建一个顺序表（12 13 21 24 28 30 42 77），从键盘输入各元素的值；
2、输出顺序表中所有元素。
3、查找顺序表里是否有元素28，是否有元素25？
4、在顺序表中第五个位置插入一个元素9，实现顺序表插入的基本操作，输出顺序表中所有元素。
5、在顺序表中删除指定位置（i=5）上的元素，实现顺序表的删除的基本操作，输出顺序表中所有元素。
6、取出第三个位置的值并输出。
7、输出表长。
8、取最大值。
（二）打开“链表.cpp”文件，将代码中TODO按下列要求填充完整
1、填充函数ShowList实现将单链表的所有元素输出出来。
2、填充函数ListLength实现单链表的求表长操作，返回链表的表长。
3、主函数：
1) 建立单链表。建立一个包括头结点和4个结点的（5，4，2，1）的单链表，实现单链表建立的基本操作。
2)将该单链表的所有元素显示出来。
3)取值。在已建好的单链表中的第3个位置（i=3）取出元素的值并输出。
4)查找。在链表中找等于2和等于100的元素，并显示相关信息。
5)插入元素。在已建好的单链表中的指定位置（i=3）插入一个结点3，实现单链表插入的基本操作，并将该单链表的所有元素显示出来。
6)删除元素。在一个包括头结点的单链表的指定位置（如i=2）删除一个结点，实现单链表删除的基本操作，并将该单链表的所有元素显示出来。
7)输出该单链表的表长。
8)取最大值。设计一个算法，通过一趟遍历确定长度为n的单链表中值最大的结点。
（三）给定一个字符串，里边可能包含“()”、"{}"、“[]”三种括号，请完成程序里的算法
bool  IsBracket(char *exp)，借助堆栈，检查该字符串的括号是否成对出现。
括号可以嵌套，即： “({()})” 这种形式，但 “({)” 或者 “({}” 都不符合要求。
（四）假设以数组Q[m]存放循环队列中的元素, 同时设置一个标志tag，以tag == 0和tag == 1来区别在队头指针(front)和队尾指针(rear)相等时，队列状态为“空”还是“满”。试设计与此结构相应的插入和删除算法，编写代码，并带入数据运行验证通过。